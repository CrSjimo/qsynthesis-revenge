include_guard(DIRECTORY)

set(CHORUSKIT_CMAKE_MODULES_DIR ${CMAKE_CURRENT_LIST_DIR})
set(CHOURSKIT_SCIRPTS_DIR ${CMAKE_CURRENT_LIST_DIR}/..)

set(CHORUSKIT_BINARY_DIR ${CMAKE_BINARY_DIR}/out-${CMAKE_HOST_SYSTEM_NAME}-${CMAKE_BUILD_TYPE})
set(CHORUSKIT_SHARE_OUTPUT_DIRECTORY ${CHORUSKIT_BINARY_DIR}/share)
set(CHORUSKIT_RUNTIME_OUTPUT_DIRECTORY ${CHORUSKIT_BINARY_DIR}/bin)
set(CHORUSKIT_LIBRARY_OUTPUT_DIRECTORY ${CHORUSKIT_BINARY_DIR}/lib)
set(CHORUSKIT_ARCHIVE_OUTPUT_DIRECTORY ${CHORUSKIT_BINARY_DIR}/lib)

set(CHORUSKIT_INSTALL_BINARY_DIRECTORY bin)
set(CHORUSKIT_INSTALL_LIBRARY_DIRECTORY lib)
set(CHORUSKIT_INSTALL_FRAMEWORK_DIRECTORY lib)
set(CHORUSKIT_INSTALL_INCLUDE_DIRECTORY include/ChorusKit)
set(CHORUSKIT_INSTALL_SHARE_DIRECTORY share)

if(WIN32)
    set(CHORUSKIT_SHARED_LIBRARY_PATTERN "*.dll")
    set(CHORUSKIT_RPATH_BASE "")
    set(CHORUSKIT_EXECUTABLE_RPATH "")
    set(CHORUSKIT_LIBRARY_RPATH "")
    set(CHORUSKIT_PLUGIN_RPATH "")
elseif(APPLE)
    set(CHORUSKIT_SHARED_LIBRARY_PATTERN "*.dylib")
    set(CHORUSKIT_EXECUTABLE_RPATH "@executable_path;@executable_path/../lib")
    set(CHORUSKIT_LIBRARY_RPATH "@loader_path")
    set(CHORUSKIT_PLUGIN_RPATH "@loader_path/../../..") # lib/_app/plugins/_plugin/xxx.dylib
else()
    set(CHORUSKIT_SHARED_LIBRARY_PATTERN "*.so*")
    set(CHORUSKIT_EXECUTABLE_RPATH "@ORIGIN")
    set(CHORUSKIT_LIBRARY_RPATH "@ORIGIN")
    set(CHORUSKIT_PLUGIN_RPATH "@ORIGIN/../../..") # lib/_app/plugins/_plugin/xxx.dylib
endif()

if(NOT DEFINED CHORUSKIT_INSTALL_DEV)
    set(CHORUSKIT_INSTALL_DEV off)
endif()